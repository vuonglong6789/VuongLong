<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnThoat.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btn_DangNhap.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>